---
import { storyblokEditable, renderRichText, useStoryblokApi } from "@storyblok/astro";
import { getIdFromContent } from "@lib/storyblokApi";
import type { ISbStories } from "@storyblok/astro";
import PostCard from "@components/cards/PostCard.astro";
 

interface Props {
  blok: BlogAndWorkItemsStoryblok;
  lang: string;
  status: StoryStatus;
}

const { blok, lang, status } = Astro.props;
const api = useStoryblokApi();
const {
  content,
  container = "normal",
  surface,
  items,
  accent_surface,
  category,
  max_items,
  padding_top = "pt-lg",
  padding_bottom = "pb-lg",
} = blok;
let stories;

/* get menu_items */
if (items && items.length > 0) {
  const newsItems = (await api.get(`cdn/stories`, {
    version: status || "published",
    by_uuids_ordered: items.join(","),
    language: lang,
    per_page: max_items || 6,
    page: 1,
  })) as ISbStories;

  stories = newsItems.data.stories;
}

if (category) {
  const categoryItems = (await api.get(`cdn/stories`, {
    version: status || "published",
    filter_query: {
      category: {
        in: category,
      },
    },
    per_page: max_items || 6,
    page: 1,
  })) as ISbStories;

  stories = categoryItems.data.stories;
}
const id = getIdFromContent(content)


---

<section
  class={`${padding_top} ${padding_bottom} ${surface || ""}`}
  {...storyblokEditable(blok)}
>
  <div class="content-grid gap-y-8" {id}>
    <div class={container}>
      <div class="richtext max-w-2xl" set:html={renderRichText(content)} />
    </div>
    {
      stories && stories.length > 0 && (
        <div
          class={`${container} flex flex-wrap gap-x-4 gap-y-6 md:gap-x-8 md:gap-y-10`}
        >
          {stories.map((story) => (
            <PostCard
              {...story.content}
              full_slug={story.full_slug}
              accent={accent_surface}
              compact={true}
              wide={true}
              min_width="min-w-[270px]"
            />
          ))}
        </div>
      )
    }
  </div>
</section>
